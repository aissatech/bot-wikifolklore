name : "Deploy to Server"
on:
  push:
    branches:
      - main
jobs:
  setup:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v3
      - name: Install Pysftp
        run: |
          pip3 install pysftp
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.x'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            landing_page/package-lock.json
      - name: Install dependencies
        run: |
          cd frontend
          npm install
          cd ../landing_page
          npm install
      - name: Build Setup
        env:
          CI: false
        run: |
          mkdir -p ${{ vars.LOCAL_TEMP_PATH }}
          bash build.sh ${{ vars.LOCAL_TEMP_PATH }} setup
  build_landing_page:
    runs-on: ubuntu-latest
    needs: setup
    environment: Production
    steps:
      - name: Build
        env:
          CI: false
        run: |
          bash build.sh ${{ vars.LOCAL_TEMP_PATH }} landing_page
  build_frontend:
    runs-on: ubuntu-latest
    needs: setup
    environment: Production
    steps:
      - name: Build
        env:
          CI: false
        run: |
          bash build.sh ${{ vars.LOCAL_TEMP_PATH }} frontend
  package_all:
    runs-on: ubuntu-latest
    needs: [build_landing_page, build_frontend]
    environment: Production
    steps:
      - name: Package
        env:
          CI: false
        run: |
          bash build.sh ${{ vars.LOCAL_TEMP_PATH }} package
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    needs: [package_all]
    steps:
      - name: Deploy
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa
          mkdir -p ~/.ssh
          ssh-keyscan tools.wikilovesfolklore.org >> ~/.ssh/known_hosts
          python3 deploy.py ${{ secrets.SSH_USER }} id_rsa ${{ vars.LOCAL_TEMP_PATH }} ${{ secrets.SSH_REMOTE_PATH }}
          ssh -i id_rsa "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "sudo /usr/bin/systemctl restart gunicorn"