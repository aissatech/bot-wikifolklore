{"version":3,"file":"static/js/477.8a0d0ed2.chunk.js","mappings":"oPA6DA,UAjDkB,WACd,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAoCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAoCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAkBC,EAAAA,EAAAA,WAAU,OAClCC,EAAAA,EAAAA,YAAU,WACN,IACMC,EADS,IAAIC,gBAAgBC,OAAOC,SAASC,QACjCC,IAAI,MAClBL,IAEJpB,EAAWoB,GACXM,EAAAA,EAAOC,SAASP,GAAIQ,MAAK,SAAAC,GACrBzB,EAAWsB,EAAAA,EAAOI,UAAUD,EAAM1B,UAClCS,EAAciB,EAAMlB,WACxB,IACJ,GAAG,CAACJ,IACJ,IAAMwB,GAAOC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB1C,EAAQ,CAADwC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,oBAEPvC,EAAQ,CAADoC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAEmC,GAC7B,QADXL,EAA8B,OAAfpB,QAAe,IAAfA,OAAe,EAAfA,EAAiB0B,eACrB,IAAZN,GAAAA,EAAcO,OAAO,CAADL,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAET,OAAhB1B,GAAU,GAAMuB,EAAAE,KAAA,GACMf,EAAAA,EAAOmB,YAAY,CACrCzB,GAAIrB,EACJI,QAASA,EACTQ,WAAY0B,IACb,KAAD,GAJW,GAAAE,EAAAO,KAKA,CAADP,EAAAE,KAAA,gBAAAF,EAAAG,OAAA,kBAEZlC,EAAcD,EAAa,GAC3BS,GAAU,GAAO,yBAAAuB,EAAAQ,OAAA,GAAAX,EAAA,KAClB,CAACrC,EAASI,EAASc,IACtB,OAAO+B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,aAAaC,QAAQH,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAAS1B,EAAM2B,SAAU3C,EAAOmC,SAAC,YACpGF,EAAAA,EAAAA,MAACW,EAAAA,EAAW,CAAAT,SAAA,EACRF,EAAAA,EAAAA,MAACY,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,iBAAkBd,SAAA,EACnFF,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACT,QAAQ,WAAUN,SAAA,CAAC,cAAYnD,MAC3CiD,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACT,QAAQ,WAAUN,SAAA,CAAC,aAAW/C,SAE9CgD,EAAAA,EAAAA,KAACe,EAAAA,EAAY,CAACjD,gBAAiBA,EAAiByC,SAAU3C,EAAQoD,kBAAmBxD,SAIjG,C","sources":["TukTukBot/Pages/Topics/EditTopic.jsx"],"sourcesContent":["import CategoryList from \"../../components/Category.jsx\";\nimport { createRef, useEffect, useState, useCallback } from \"react\";\nimport Server from \"../../Server.ts\";\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport React from \"react\";\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Collapse from \"@mui/material/Collapse\"\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nconst EditTopic = () => {\n    const [topicID, setTopicID] = useState('');\n    const [country, setCountry] = useState('');\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [categories, setCategories] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const categoryListRef = createRef(null);\n    useEffect(() => {\n        const params = new URLSearchParams(window.location.search);\n        const id = params.get('id');\n        if(!id)\n            return;\n        setTopicID(id);\n        Server.getTopic(id).then(topic => {\n            setCountry(Server.countries[topic.country]);\n            setCategories(topic.categories);\n        })\n    }, [refreshKey]);\n    const save = useCallback(async () => {\n        if(!topicID)\n            return;\n        if(!country)\n            return;\n        const categoryList = categoryListRef?.current;\n        if (!categoryList?.length)\n            return;\n        setSaving(true);\n        const updated = await Server.updateTopic({\n            id: topicID,\n            country: country,\n            categories: categoryList\n        });\n        if (!updated)\n            return;\n        setRefreshKey(refreshKey + 1);\n        setSaving(false);\n    }, [topicID, country, categoryListRef]);\n    return <Card>\n        <CardHeader title=\"Edit Topic\" action={<Button variant=\"contained\" onClick={save} disabled={saving}>Save</Button>} />\n        <CardContent>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n                <Typography variant=\"subtitle\">Topic ID : {topicID}</Typography>\n                <Typography variant=\"subtitle\">Country : {country}</Typography>\n            </Box>\n            <CategoryList categoryListRef={categoryListRef} disabled={saving} initialCategories={categories} />\n            \n        </CardContent>\n    </Card>\n}\nexport default EditTopic"],"names":["_useState","useState","_useState2","_slicedToArray","topicID","setTopicID","_useState3","_useState4","country","setCountry","_useState5","_useState6","refreshKey","setRefreshKey","_useState7","_useState8","categories","setCategories","_useState9","_useState10","saving","setSaving","categoryListRef","createRef","useEffect","id","URLSearchParams","window","location","search","get","Server","getTopic","then","topic","countries","save","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","categoryList","wrap","_context","prev","next","abrupt","current","length","updateTopic","sent","stop","_jsxs","Card","children","_jsx","CardHeader","title","action","Button","variant","onClick","disabled","CardContent","Box","sx","display","flexDirection","justifyContent","Typography","CategoryList","initialCategories"],"sourceRoot":""}